Rocketmq相比于Rabbitmq、kafka具有主要优势特性有：
• 支持事务型消息（消息发送和DB操作保持两方的最终一致性，rabbitmq和kafka不支持）
• 支持结合rocketmq的多个系统之间数据最终一致性（多方事务，二方事务是前提）
• 支持18个级别的延迟消息（rabbitmq和kafka不支持）
• 支持指定次数和时间间隔的失败消息重发（kafka不支持，rabbitmq需要手动确认）
• 支持consumer端tag过滤，减少不必要的网络传输（rabbitmq和kafka不支持）
• 支持重复消费（rabbitmq不支持，kafka支持）

RocketMQ源码主要分为以下几个package：

rocketmq-broker：mq的核心，它能接收producer和consumer的请求，并调用store层服务对消息进行处理。HA服务的基本单元，支持同步双写，异步双写等模式。

rocketmq-client：mq客户端实现，目前官方仅仅开源了java版本的mq客户端，c++，go客户端有社区开源贡献。

rocketmq-common：一些模块间通用的功能类，比如一些配置文件、常量。

rocketmq-example：官方提供的例子，对典型的功能比如order message，push consumer，pull consumer的用法进行了示范。

rocketmq-filter：消息过滤服务，相当于在broker和consumer中间加入了一个filter代理。

rocketmq-namesrv：命名服务，更新和路由发现 broker服务。

rocketmq-remoting：基于netty的底层通信实现，所有服务间的交互都基于此模块。

rocketmq-srvutil：解析命令行的工具类ServerUtil。

rocketmq-store：存储层实现，同时包括了索引服务，高可用HA服务实现。

rocketmq-tools：mq集群管理工具，提供了消息查询等功能。

深入浅出
https://my.oschina.net/javaFamily/blog/3136276

源码分析
https://blog.csdn.net/csdnnews/article/details/81124883
https://blog.csdn.net/qq_27641935/article/details/86539980