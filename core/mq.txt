1. 为什么使用 MQ, MQ 如何选型, 消息可靠性如何保证, 如何保证幂等
mq 消息可靠性,幂等如何保证
MQ作用
1、解耦
2、可靠投递
3、广播
4、最终一致性
5、流量削峰
6、消息投递保证
7、异步通信（支持同步）
8、提高系统吞吐、健壮性
1、异步
2、解耦
3、削峰
缺点：系统可用性降低、复杂度增高
选型
特性	     ActiveMQ	RabbitMQ	RocketMQ	kafka
开发语言	java	erlang	        java	        scala
单机吞吐量	万级	万级	        10万级	        10万级
时效性	        ms级	us级	        ms级	        ms级以内
可用性	高(主从架构)	高(主从架构)	非常高(分布式架构)	非常高(分布式架构)
功能特性	
成熟的产品，在很多公司得到应用；有较多的文档；各种协议支持较好	
基于erlang开发，所以并发能力很强，性能极其好，延时很低;管理界面较丰富	
MQ功能比较完备，扩展性佳	
只支持主要的MQ功能，像一些消息查询，消息回溯等功能没有提供，毕竟是为大数据准备的，在大数据领域应用广。
RabbitMQ消息可靠性保证
1生产者 transaction 或者 confirm 
2消息队列丢失数据 queue持久化 消息持久化
3消费者丢失数据 关闭自动 ack，手动ack
Rabbitmq如何保证消息有序

kafka每一个 topic 在硬盘上用一个 logfile 表示，通过顺序读写可以使性能非常高，
但当多个 topic 的多个 partition 分布在同一台机器上时，原本的顺序读写就变为随机读写

ExchangeTypes
fanout direct topic
binding key 把exchange和queue关系确定
routing key 到queue

消息队列已经逐渐成为企业IT系统内部通信的核心手段。
它具有低耦合、可靠投递、广播、流量控制、最终一致性等一系列功能，成为异步RPC的主要手段之一。

1.消息队列不是万能的，对于需要强事务保证而且延迟敏感的，RPC是优于消息队列的。
2.对于一些无关痛痒，或者对于别人非常重要但是对于自己不是那么关心的事情，可以利用消息队列去做。
3.支持最终一致性的消息队列，能够用来处理延迟不那么敏感的“分布式事务”场景，而且相对于笨重的分布式事务，可能是更优的处理方式。
4.当上下游系统处理能力存在差距的时候，利用消息队列做一个通用的“漏斗”，在下游有能力处理的时候，再进行分发。
5.如果下游有很多系统关心你的系统发出的通知的时候，果断地使用消息队列吧。